/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lecteur;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.PdfArray;
import com.itextpdf.text.pdf.PdfDictionary;
import com.itextpdf.text.pdf.PdfName;
import com.itextpdf.text.pdf.PdfReader;
import com.itextpdf.text.pdf.PdfStamper;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.parser.PdfTextExtractor;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import com.itextpdf.text.pdf.pdfcleanup.PdfCleanUpLocation;
import com.itextpdf.text.pdf.pdfcleanup.PdfCleanUpProcessor;
 
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;



/**
 *
 * @author tbalandier
 */
public class Interface extends javax.swing.JFrame {

    private static void veriftabbilan(ArrayList<Bilan> tab) {
        //Verifier si la la 2nd rubrique est égale à la première
        //Si c'est la cas, la deuxième = 0
        Bilan bil1;
        Bilan bil2;
        
        if(tab.size() == 2) {
            bil1 = tab.get(0);
            bil2 = tab.get(1);
            
            if(bil1.getValeur() == bil2.getValeur()) {
                tab.get(1).setValeur(0);
            }
        }
    }

    /**
     * Creates new form Interface
     */
    
    private DocPDF doc;
    
    public Interface() {
        initComponents();
        this.doc = new DocPDF();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lb_fichier = new javax.swing.JLabel();
        button_parcourir = new javax.swing.JButton();
        button_lire = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        text_form = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lb_fichier.setText("Nom du fichier");
        lb_fichier.setToolTipText("");
        lb_fichier.setName("lb_fichier"); // NOI18N

        button_parcourir.setLabel("Parcourir...");
        button_parcourir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_parcourirActionPerformed(evt);
            }
        });

        button_lire.setText("Lire");
        button_lire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_lireActionPerformed(evt);
            }
        });

        text_form.setEditable(false);
        text_form.setColumns(20);
        text_form.setRows(5);
        jScrollPane1.setViewportView(text_form);
        text_form.getAccessibleContext().setAccessibleName("text_form");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button_lire, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lb_fichier)
                        .addComponent(button_parcourir)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 161, Short.MAX_VALUE)
                        .addComponent(lb_fichier)
                        .addGap(18, 18, 18)
                        .addComponent(button_parcourir)
                        .addGap(76, 76, 76)
                        .addComponent(button_lire, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        lb_fichier.getAccessibleContext().setAccessibleName("lb_ficher");
        button_parcourir.getAccessibleContext().setAccessibleName("button_parcourir");
        button_lire.getAccessibleContext().setAccessibleName("button_lire");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_parcourirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_parcourirActionPerformed
        // TODO add your handling code here:
        
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
        "PDF Documents", "pdf");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showOpenDialog(null);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            this.doc.setNom(chooser.getSelectedFile().getName());
            this.doc.setChemin(chooser.getSelectedFile().getPath());

            this.lb_fichier.setText(doc.getNom());

            //test affichage
            this.doc.show();
        }
    }//GEN-LAST:event_button_parcourirActionPerformed

    private void button_lireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_lireActionPerformed
        // TODO add your handling code here:
        String text = "";
        try {
            //this.doc.show();
            text = ReadPDF(this.doc.getChemin());
        } catch (IOException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        }

        if(text.equals("")){
            this.lb_fichier.setText("Nom du fichier.");
            this.text_form.setText("");
        }
        else {
            this.text_form.setText(text);
        }
    }//GEN-LAST:event_button_lireActionPerformed

    public void createPdf(String filename)
	throws DocumentException, IOException {
        // step 1
        Document document = new Document();
        // step 2
        PdfWriter.getInstance(document, new FileOutputStream(filename));
        // step 3
        document.open();
        // step 4
        document.add(new Paragraph("Hello World!"));
        document.add(new Paragraph("Hello Me"));
        // step 5
        document.close();
    }
    
    private static String ReadPDF(String pdf_url) throws IOException, DocumentException
    {
        
        ArrayList<Bilan> tabRubriqueBilanTotal = new ArrayList<>();
        ArrayList<Bilan> tabRubriqueBilan = null;
        System.out.println("ReadPDF");

        StringBuilder str=new StringBuilder();
        
        try
        {
        pdf_url = "C:\\Users\\Super_t0t0\\Documents\\GitHub\\ReaderPDF\\ressources\\sample-6.pdf";
        PdfReader reader = new PdfReader(pdf_url);
               
        System.out.println("lecteur.Interface.ReadPDF()");
        String txt = "C:\\Users\\Super_t0t0\\Documents\\GitHub\\ReaderPDF\\ressources\\sample-999.pdf";
        
        File file = new File(txt);
        file.getParentFile().mkdirs();
        PdfStamper stamper = new PdfStamper(reader, new FileOutputStream(txt));
        //OK pour la découpe du pdf
        for (int page = 1; page <= reader.getNumberOfPages(); page++) {
            List<PdfCleanUpLocation> cleanUpLocations = new ArrayList<PdfCleanUpLocation>();
            //Variabiliser les tailles des rectangles et se baser dessus
            //TODO
            //Taille rectangle souahité : 
            //Rectangle(int x, int y, int width, int height)
            //PdfRectangle rect = new PdfRectangle(198, 50, 304, 730);

            //cleanUpLocations.add(new PdfCleanUpLocation(1, new Rectangle(0, 50, 730, 730), BaseColor.GRAY));
            cleanUpLocations.add(new PdfCleanUpLocation(page, new Rectangle(0, 0, reader.getPageSize(1).getRight(), 50), BaseColor.GRAY));
            cleanUpLocations.add(new PdfCleanUpLocation(page, new Rectangle(0, 0, 198, reader.getPageSize(1).getTop()), BaseColor.BLUE));
            cleanUpLocations.add(new PdfCleanUpLocation(page, new Rectangle(304, 0, reader.getPageSize(1).getRight(), reader.getPageSize(1).getTop()), BaseColor.YELLOW));
            cleanUpLocations.add(new PdfCleanUpLocation(page, new Rectangle(0, 730, reader.getPageSize(1).getRight(), reader.getPageSize(1).getTop()-50+730), BaseColor.CYAN));

            PdfCleanUpProcessor cleaner = new PdfCleanUpProcessor(cleanUpLocations, stamper);
            cleaner.cleanUp();
            stamper.close();
        }
        reader.close();
        System.out.println("FIN CREATION DOC CLOSE####");
        System.out.println("DEBUT DE LA LECTURE####");
       
        pdf_url = "C:\\Users\\Super_t0t0\\Documents\\GitHub\\ReaderPDF\\ressources\\sample-999.pdf";             
        PdfReader reader1 = new PdfReader(pdf_url);
        
        //Patterns de recherche des résultats pour les bilans
        // 2 Caractères puis chiffres ou non
        //A peaufiner
        //TODO
        String pattern_vide = "[A-Z]{2}";
        String pattern_double = "[A-Z]{2} +[0-9]* [0-9]+";
        List<String>patterns = new ArrayList();

        patterns.add(pattern_vide);
        patterns.add(pattern_double);

        //Recherche page BILAN - ACTIF
        //Recherche page BILAN - PASSIF
        //Recherche page 
        //pour chaque page, lire ligne.
        //for(int i=22;i<=22;i++) {
        for(int i=1;i<=reader1.getNumberOfPages();i++) {
            
                        
            String text_extract=PdfTextExtractor.getTextFromPage(reader1, i);
            System.out.println("EXTRACT PDF = \n" + text_extract);
            
            //Appel fonction split chaque ligne du text extrait.
            String [] lignes = splitPage(text_extract);
            System.out.println("FIN EXTRACT PDF ###");
            System.out.println("NB DE LIGNE A TRAITER = " + lignes.length);
            
            for (String ligne : lignes) {
                //TAB_BILAN par ligne
                //Maybe par pattern 
                //Passe deux fois donc mauvais, il faut exclure les cas déja
                //passés par un pattern
                //TODO
                tabRubriqueBilan = recherchebilan(ligne, patterns);
                for (int k = 0; k < tabRubriqueBilan.size(); k++) {
                    tabRubriqueBilanTotal.add(tabRubriqueBilan.get(k));
                }
            }
            
            for (int j = 0; j < tabRubriqueBilanTotal.size(); j++) {
                //tabRubriqueBilanTotal.get(j).show();
            }
            System.out.println("TAILLE TAB PAR RECTANGLE = " + tabRubriqueBilanTotal.size());       
        }
        //afficheResultat(tabRubriqueBilanTotal);
        reader1.close();
        
        }catch(IOException | DocumentException err) {
        }
        return String.format("%s", str);
    }
    
    //stock chaque ligne dans un tableau de str.
    private static String[] splitPage(String page) {
        
        String[] row = page.split("(?m)\n");
        //row = page.split("(?m)^.*$");
        
        return row;
    }

    private static ArrayList<Bilan> recherchebilan(String ligne, List<String> patterns) {  
        
        ArrayList<Bilan> tab = new ArrayList<>();
        Bilan bil;
        String resultat;
        String rubrique;
        Integer valeur;      
        
        for (int i = 0; i < patterns.size(); i++) {
            
            Pattern p = Pattern.compile(patterns.get(i));
            Matcher m = p.matcher(ligne);
            while (m.find()) {                    
                //Créatoin d'un nouveau bilan
                bil = new Bilan();
                resultat = ligne.substring(m.start(), m.end());            
                //Get rubrique du resultat
                rubrique = getRubriqueRegex(resultat);
                //Get valeur du resultat
                valeur = getValeurRegex(resultat);

                bil.setNom(rubrique);
                bil.setValeur(valeur);

                tab.add(bil);
            }       
        
        }
        veriftabbilan(tab);
        
        for (int i = 0; i < tab.size(); i++) {
            tab.get(i).show();
        }
        
        return tab;
    }

    private static Integer getValeurRegex(String resultat) {
        Integer res;
        String[] strsplit;
        String str;
        
        strsplit = resultat.split("[a-zA-Z]+");
        //test du split si seulement rubrique sur la ligne
        if (strsplit.length == 0) {
            res = 0;
        }
        
        else {
            str = strsplit[1].replaceAll(" ", "");
            res = Integer.parseInt(str);
        }

        return res;
    }

    private static String getRubriqueRegex(String resultat) {
        String res = null;
        String pattern;
        
        pattern = "[a-zA-Z]{2}";
        
        Pattern p = Pattern.compile(pattern);
        Matcher m = p.matcher(resultat);

        while (m.find()) {
            res = (resultat.substring(m.start(), m.end()));
        }
        return res;
    }

    private static void afficheResultat(ArrayList<Bilan> tabRubriqueBilanTotal) {
        
        for (int i = 0; i < tabRubriqueBilanTotal.size(); i++) {
            
            
        }
    }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_lire;
    private javax.swing.JButton button_parcourir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_fichier;
    private javax.swing.JTextArea text_form;
    // End of variables declaration//GEN-END:variables
}
